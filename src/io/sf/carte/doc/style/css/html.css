/*
 * HTML/XHTML CSS, derived from the one in the W3C CSS 2.1 specification,
 * combined with the styles from HTML5 specification.
 */
html, address, blockquote, body, dd, div,
dl, dt, fieldset, form, frame, frameset,
h1, h2, h3, h4, h5, h6, iframe, dir,
article, aside, hgroup, nav, section,
object, ol, p, ul, applet, center,
hr, menu, pre, figure, figcaption, footer,
header, legend, listing, plaintext, xmp
                { display: block }
li              { display: list-item }
body            { margin: 8px }
h1              { font-size: 2em; margin: .67em 0 }
h2              { font-size: 1.5em; margin: .75em 0 }
h3              { font-size: 1.17em; margin: 1em 0 }
h4              { font-size: 1em; margin: 1.33em 0 }
h5              { font-size: 0.83em; margin: 1.67em 0 }
h6              { font-size: 0.67em; margin: 2.33em 0 }
p, blockquote,
ul, fieldset, form,
ol, dl, dir, figure,
listing, plaintext,
pre, xmp        { margin-top: 1em; margin-bottom: 1em; }
listing, plaintext,
pre, xmp        { white-space: pre }
menu            { margin: 1.12em 0 }
h1, h2, h3, h4,
h5, h6          { font-weight: bold }
b, strong       { font-weight: bolder }
blockquote, figure
                { margin-left: 40px; margin-right: 40px }
i, cite, em, dfn,
var, address    { font-style: italic }
pre, tt, code,
listing, plaintext,
kbd, samp, xmp  { font-family: monospace }
button, textarea,
input, select   { display: inline-block }
big             { font-size: 1.17em }
small, sub, sup { font-size: .83em }
sub, sup        { line-height: normal; }
sub             { vertical-align: sub }
sup             { vertical-align: super }
s, strike, del  { text-decoration: line-through }
hr              { border: 1px inset }
ol, ul, dir,
menu, dd        { margin-left: 40px } /* LTR-specific: use 'margin-right' for rtl elements */
dir, ol, ul     { padding-left: 40px } /* LTR-specific: use 'padding-right' for rtl elements */
/* Set up ol and ul so that they scope the list-item counter */
ol, ul          { counter-reset: list-item }
ol              { list-style-type: decimal }
dir, ul         { list-style-type: disc }
dir dir, dir ul,
ol dir, ol ul,
ul dir, ul ul   { list-style-type: circle }
dir dir dir, dir dir ul,
dir ol dir, dir ol ul,
dir ul dir, dir ul ul,
ol dir dir, ol dir ul,
ol ol dir, ol ol ul,
ol ul dir, ol ul ul,
ul dir dir, ul dir ul,
ul ol dir, ul ol ul,
ul ul dir,
ul ul ul        { list-style-type: square }
dir dir, dir dl,
dir ol, dir ul,
dl dir, dl dl,
dl ol, dl ul,
ol dir, ol dl,
ol ol, ol ul,
ul dir, ul dl,
ul ol, ul ul    { margin-top: 0; margin-bottom: 0 }
ol[type=1], li[type=1] { list-style-type: decimal; }
ol[type=a], li[type=a] { list-style-type: lower-alpha; }
ol[type=A], li[type=A] { list-style-type: upper-alpha; }
ol[type=i], li[type=i] { list-style-type: lower-roman; }
ol[type=I], li[type=I] { list-style-type: upper-roman; }
ul[type=disc i], li[type=disc i] { list-style-type: disc; }
ul[type=circle i], li[type=circle i] { list-style-type: circle; }
ul[type=square i], li[type=square i] { list-style-type: square; }
/* The start attribute on ol elements */
ol[start]       { counter-reset: list-item calc(attr(start integer, 1) - 1) }
/* The value attribute on li elements */
li[value]       { counter-set: list-item attr(value integer, 1) }
u, ins          { text-decoration: underline }
center          { text-align: center }
br              { white-space: pre; } /* this also has bidi implications */
nobr            { white-space: nowrap; }
wbr             { content: '\200B'; } /* this also has bidi implications */
nobr wbr        { white-space: normal; }
/* br:before       { content: "\A" }
:before, :after { white-space: pre-line } */
:link, :visited { text-decoration: underline }
:focus          { outline: thin dotted invert }
abbr, acronym   { font-variant: small-caps; letter-spacing: 0.1em }
a[href]         { text-decoration: underline }
pre[wrap]       { white-space: pre-wrap; }
br[clear=left i]{ clear: left; }
br[clear=right i]
                { clear: right; }
br[clear=all i], br[clear=both i] { clear: both; }
table           { display: table; box-sizing: border-box; border-spacing: 2px; border-collapse: separate; text-indent: initial }
tr              { display: table-row }
thead           { display: table-header-group }
tbody           { display: table-row-group }
tfoot           { display: table-footer-group }
col             { display: table-column }
colgroup        { display: table-column-group }
td, th          { display: table-cell; padding: 1px }
caption         { display: table-caption; text-align: center }
th              { font-weight: bold; text-align: center }
colgroup[hidden], col[hidden],
thead[hidden], tbody[hidden],
tfoot[hidden], tr[hidden],
td[hidden], th[hidden]
                { visibility: collapse }
thead, tbody,
tfoot, table > tr
                { vertical-align: middle; }
tr, td, th      { vertical-align: inherit; }
table, td, th   { border-color: gray; }
thead, tbody,
tfoot, tr       { border-color: inherit; }
/*
table[rules=none i], table[rules=groups i], table[rules=rows i],
table[rules=cols i], table[rules=all i], table[frame=void i],
table[frame=above i], table[frame=below i], table[frame=hsides i],
table[frame=lhs i], table[frame=rhs i], table[frame=vsides i],
table[frame=box i], table[frame=border i],
table[rules=none i] > tr > td, table[rules=none i] > tr > th,
table[rules=groups i] > tr > td, table[rules=groups i] > tr > th,
table[rules=rows i] > tr > td, table[rules=rows i] > tr > th,
table[rules=cols i] > tr > td, table[rules=cols i] > tr > th,
table[rules=all i] > tr > td, table[rules=all i] > tr > th,
table[rules=none i] > thead > tr > td, table[rules=none i] > thead > tr > th,
table[rules=groups i] > thead > tr > td, table[rules=groups i] > thead > tr > th,
table[rules=rows i] > thead > tr > td, table[rules=rows i] > thead > tr > th,
table[rules=cols i] > thead > tr > td, table[rules=cols i] > thead > tr > th,
table[rules=all i] > thead > tr > td, table[rules=all i] > thead > tr > th,
table[rules=none i] > tbody > tr > td, table[rules=none i] > tbody > tr > th,
table[rules=groups i] > tbody > tr > td, table[rules=groups i] > tbody > tr > th,
table[rules=rows i] > tbody > tr > td, table[rules=rows i] > tbody > tr > th,
table[rules=cols i] > tbody > tr > td, table[rules=cols i] > tbody > tr > th,
table[rules=all i] > tbody > tr > td, table[rules=all i] > tbody > tr > th,
table[rules=none i] > tfoot > tr > td, table[rules=none i] > tfoot > tr > th,
table[rules=groups i] > tfoot > tr > td, table[rules=groups i] > tfoot > tr > th,
table[rules=rows i] > tfoot > tr > td, table[rules=rows i] > tfoot > tr > th,
table[rules=cols i] > tfoot > tr > td, table[rules=cols i] > tfoot > tr > th,
table[rules=all i] > tfoot > tr > td, table[rules=all i] > tfoot > tr > th {
  border-color: black;
}
table[align=left i] { float: left; }
table[align=right i] { float: right; }
table[align=center i] { margin-left: auto; margin-right: auto; }
thead[align=absmiddle i], tbody[align=absmiddle i], tfoot[align=absmiddle i],
tr[align=absmiddle i], td[align=absmiddle i], th[align=absmiddle i] {
  text-align: center;
}
caption[align=bottom i] { caption-side: bottom; }
p[align=left i], h1[align=left i], h2[align=left i], h3[align=left i],
h4[align=left i], h5[align=left i], h6[align=left i] {
  text-align: left;
}
p[align=right i], h1[align=right i], h2[align=right i], h3[align=right i],
h4[align=right i], h5[align=right i], h6[align=right i] {
  text-align: right;
}
p[align=center i], h1[align=center i], h2[align=center i], h3[align=center i],
h4[align=center i], h5[align=center i], h6[align=center i] {
  text-align: center;
}
p[align=justify i], h1[align=justify i], h2[align=justify i], h3[align=justify i],
h4[align=justify i], h5[align=justify i], h6[align=justify i] {
  text-align: justify;
}
thead[valign=top i], tbody[valign=top i], tfoot[valign=top i],
tr[valign=top i], td[valign=top i], th[valign=top i] {
  vertical-align: top;
}
thead[valign=middle i], tbody[valign=middle i], tfoot[valign=middle i],
tr[valign=middle i], td[valign=middle i], th[valign=middle i] {
  vertical-align: middle;
}
thead[valign=bottom i], tbody[valign=bottom i], tfoot[valign=bottom i],
tr[valign=bottom i], td[valign=bottom i], th[valign=bottom i] {
  vertical-align: bottom;
}
thead[valign=baseline i], tbody[valign=baseline i], tfoot[valign=baseline i],
tr[valign=baseline i], td[valign=baseline i], th[valign=baseline i] {
  vertical-align: baseline;
}
td[nowrap], th[nowrap] { white-space: nowrap; }
table[rules=none i], table[rules=groups i], table[rules=rows i],
table[rules=cols i], table[rules=all i] {
  border-style: hidden;
  border-collapse: collapse;
}
*/
/*
table[border] { border-style: outset; } /* only if border is not equivalent to zero * /
table[frame=void i] { border-style: hidden; }
table[frame=above i] { border-style: outset hidden hidden hidden; }
table[frame=below i] { border-style: hidden hidden outset hidden; }
table[frame=hsides i] { border-style: outset hidden outset hidden; }
table[frame=lhs i] { border-style: hidden hidden hidden outset; }
table[frame=rhs i] { border-style: hidden outset hidden hidden; }
table[frame=vsides i] { border-style: hidden outset; }
table[frame=box i], table[frame=border i] { border-style: outset; }

table[border] > tr > td, table[border] > tr > th,
table[border] > thead > tr > td, table[border] > thead > tr > th,
table[border] > tbody > tr > td, table[border] > tbody > tr > th,
table[border] > tfoot > tr > td, table[border] > tfoot > tr > th {
  /* only if border is not equivalent to zero * /
  border-width: 1px;
  border-style: inset;
}
table[rules=none i] > tr > td, table[rules=none i] > tr > th,
table[rules=none i] > thead > tr > td, table[rules=none i] > thead > tr > th,
table[rules=none i] > tbody > tr > td, table[rules=none i] > tbody > tr > th,
table[rules=none i] > tfoot > tr > td, table[rules=none i] > tfoot > tr > th,
table[rules=groups i] > tr > td, table[rules=groups i] > tr > th,
table[rules=groups i] > thead > tr > td, table[rules=groups i] > thead > tr > th,
table[rules=groups i] > tbody > tr > td, table[rules=groups i] > tbody > tr > th,
table[rules=groups i] > tfoot > tr > td, table[rules=groups i] > tfoot > tr > th,
table[rules=rows i] > tr > td, table[rules=rows i] > tr > th,
table[rules=rows i] > thead > tr > td, table[rules=rows i] > thead > tr > th,
table[rules=rows i] > tbody > tr > td, table[rules=rows i] > tbody > tr > th,
table[rules=rows i] > tfoot > tr > td, table[rules=rows i] > tfoot > tr > th {
  border-width: 1px;
  border-style: none;
}
table[rules=cols i] > tr > td, table[rules=cols i] > tr > th,
table[rules=cols i] > thead > tr > td, table[rules=cols i] > thead > tr > th,
table[rules=cols i] > tbody > tr > td, table[rules=cols i] > tbody > tr > th,
table[rules=cols i] > tfoot > tr > td, table[rules=cols i] > tfoot > tr > th {
  border-width: 1px;
  border-style: none solid;
}
table[rules=all i] > tr > td, table[rules=all i] > tr > th,
table[rules=all i] > thead > tr > td, table[rules=all i] > thead > tr > th,
table[rules=all i] > tbody > tr > td, table[rules=all i] > tbody > tr > th,
table[rules=all i] > tfoot > tr > td, table[rules=all i] > tfoot > tr > th {
  border-width: 1px;
  border-style: solid;
}
table[rules=groups i] > colgroup {
  border-left-width: 1px;
  border-left-style: solid;
  border-right-width: 1px;
  border-right-style: solid;
}
table[rules=groups i] > thead,
table[rules=groups i] > tbody,
table[rules=groups i] > tfoot {
  border-top-width: 1px;
  border-top-style: solid;
  border-bottom-width: 1px;
  border-bottom-style: solid;
}
table[rules=rows i] > tr, table[rules=rows i] > thead > tr,
table[rules=rows i] > tbody > tr, table[rules=rows i] > tfoot > tr {
  border-top-width: 1px;
  border-top-style: solid;
  border-bottom-width: 1px;
  border-bottom-style: solid;
}
*/

/* Forms */
input, select, option,
optgroup, button,
textarea, keygen
                { text-indent: initial }
textarea        { white-space: pre-wrap; }
input[type="radio"], input[type="checkbox"], input[type="reset"], input[type="button"],
input[type="submit"], select, button
                { box-sizing: border-box }
hr { color: gray; border-style: inset; border-width: 1px; margin: 0.5em auto; }
hr[align=left]  { margin-left: 0; margin-right: auto; }
hr[align=right] { margin-left: auto; margin-right: 0; }
hr[align=center]{ margin-left: auto; margin-right: auto; }
hr[color], hr[noshade] { border-style: solid; }
fieldset        { margin-left: 2px; margin-right: 2px;
                  border: groove 2px ThreeDFace;
				  padding: 0.35em 0.625em 0.75em; }
legend          { padding-left: 2px; padding-right: 2px }
iframe          { border: 2px inset; }
video           { object-fit: contain; }
/*
iframe[frameborder=0], iframe[frameborder=no i] { border: none; }

applet[align=left i], embed[align=left i], iframe[align=left i],
img[align=left i], input[type=image i][align=left i], object[align=left i] {
  float: left;
}

applet[align=right i], embed[align=right i], iframe[align=right i],
img[align=right i], input[type=image i][align=right i], object[align=right i] {
  float: right;
}

applet[align=top i], embed[align=top i], iframe[align=top i],
img[align=top i], input[type=image i][align=top i], object[align=top i] {
  vertical-align: top;
}

applet[align=baseline i], embed[align=baseline i], iframe[align=baseline i],
img[align=baseline i], input[type=image i][align=baseline i], object[align=baseline i] {
  vertical-align: baseline;
}

applet[align=texttop i], embed[align=texttop i], iframe[align=texttop i],
img[align=texttop i], input[type=image i][align=texttop i], object[align=texttop i] {
  vertical-align: text-top;
}

applet[align=absmiddle i], embed[align=absmiddle i], iframe[align=absmiddle i],
img[align=absmiddle i], input[type=image i][align=absmiddle i], object[align=absmiddle i],
applet[align=abscenter i], embed[align=abscenter i], iframe[align=abscenter i],
img[align=abscenter i], input[type=image i][align=abscenter i], object[align=abscenter i] {
  vertical-align: middle;
}

applet[align=bottom i], embed[align=bottom i], iframe[align=bottom i],
img[align=bottom i], input[type=image i][align=bottom i],
object[align=bottom i] {
  vertical-align: bottom;
}
*/

/* Begin bidirectionality settings (do not change) */
bdo[dir="ltr"]  { direction: ltr; unicode-bidi: bidi-override }
bdo[dir="rtl"]  { direction: rtl; unicode-bidi: bidi-override }
*[dir="ltr"]    { direction: ltr; unicode-bidi: embed }
*[dir="rtl"]    { direction: rtl; unicode-bidi: embed }
[dir]:dir(ltr), bdi:dir(ltr), input[type=tel]:dir(ltr)
                { direction: ltr; }
[dir]:dir(rtl), bdi:dir(rtl)
                { direction: rtl; }

address, blockquote, center, div, figure, figcaption, footer, form,
header, hr, legend, listing, p, plaintext, pre, xmp, article,
aside, h1, h2, h3, h4, h5, h6, hgroup, main, nav, section, table, caption,
colgroup, col, thead, tbody, tfoot, tr, td, th, dir, dd, dl, dt,
ol, ul, li, bdi, output, ruby, rb, rt, rbc, rtc, [dir=ltr i], [dir=rtl i], [dir=auto i]
                { unicode-bidi: isolate; }
bdo, bdo[dir]   { unicode-bidi: isolate-override; } 

textarea[dir=auto i], input[type=text][dir=auto i], input[type=search][dir=auto i],
input[type=tel][dir=auto i], input[type=url][dir=auto i], input[type=email][dir=auto i],
pre[dir=auto i] { unicode-bidi: plaintext; }

address, blockquote, body, dd, div, dl, dt, fieldset, 
form, frame, frameset, h1, h2, h3, h4, h5, h6, iframe, 
noframes, noscript, object, ol, p, ul, applet, center,
dir, hr, menu, pre, li, table, tr, thead, tbody, tfoot, 
col, colgroup, td, th, caption   { unicode-bidi: embed }

[hidden], area, base, basefont, datalist, head, link,
meta, noembed, noframes, param, rp, script, source, style,
template, track,
title           { display: none; }
embed[hidden]   { display: inline; height: 0; width: 0; }
ruby            { display: ruby; }
rb              { display: ruby-base; white-space: nowrap; }
rt   {
    display: ruby-text;
    white-space: nowrap;
    font-size: 50%;
    font-variant-east-asian: ruby;
    text-emphasis: none;
}
rbc             { display: ruby-base-container; }
rtc             { display: ruby-text-container; }
:link           { color: #0000EE; }
:visited        { color: #551A8B; }
:link, :visited { text-decoration: underline; }
a:link[rel~=help], a:visited[rel~=help],
area:link[rel~=help], area:visited[rel~=help]
                { cursor: help; }
:focus          { outline: auto; }
mark            { background: yellow; color: black; }
abbr[title],
acronym[title]  { text-decoration: dotted underline; }
blink           { text-decoration: blink; }
q::before       { content: open-quote; }
q::after        { content: close-quote; }
li::marker      { font-variant-numeric: tabular-nums; }

@media print {
  h1            { page-break-before: always }
  h1, h2, h3,
  h4, h5, h6    { page-break-after: avoid }
  ul, ol, dl    { page-break-before: avoid }
}
